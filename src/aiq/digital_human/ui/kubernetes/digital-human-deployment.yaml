apiVersion: v1
kind: Namespace
metadata:
  name: digital-human
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: digital-human-config
  namespace: digital-human
data:
  ENVIRONMENT: "production"
  ENABLE_CONSENSUS: "true"
  ENABLE_NVIDIA: "false"
  ENABLE_MCP: "true"
  LOG_LEVEL: "INFO"
---
apiVersion: v1
kind: Secret
metadata:
  name: digital-human-secrets
  namespace: digital-human
type: Opaque
data:
  JWT_SECRET: <base64-encoded-jwt-secret>
  DATABASE_URL: <base64-encoded-database-url>
  REDIS_URL: <base64-encoded-redis-url>
  OPENAI_API_KEY: <base64-encoded-openai-key>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: digital-human-backend
  namespace: digital-human
  labels:
    app: digital-human-backend
    version: v3.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: digital-human-backend
  template:
    metadata:
      labels:
        app: digital-human-backend
        version: v3.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: backend
        image: digitalhuman/backend:v3.0.0
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 8001
          name: websocket
        envFrom:
        - configMapRef:
            name: digital-human-config
        - secretRef:
            name: digital-human-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: logs
        emptyDir:
          sizeLimit: 10Gi
      - name: cache
        emptyDir:
          sizeLimit: 5Gi
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - digital-human-backend
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: digital-human-backend
  namespace: digital-human
  labels:
    app: digital-human-backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: websocket
  selector:
    app: digital-human-backend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: digital-human-backend-hpa
  namespace: digital-human
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: digital-human-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "1000"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: digital-human-ingress
  namespace: digital-human
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/websocket-services: "digital-human-backend"
    nginx.ingress.kubernetes.io/upstream-keepalive-connections: "100"
spec:
  tls:
  - hosts:
    - api.digitalhuman.ai
    secretName: digital-human-tls
  rules:
  - host: api.digitalhuman.ai
    http:
      paths:
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: digital-human-backend
            port:
              number: 8001
      - path: /
        pathType: Prefix
        backend:
          service:
            name: digital-human-backend
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: digital-human
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: digital-human
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: digital-human
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: digital-human-backend-pdb
  namespace: digital-human
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: digital-human-backend
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: digital-human-backend
  namespace: digital-human
spec:
  selector:
    matchLabels:
      app: digital-human-backend
  endpoints:
  - port: http
    path: /metrics
    interval: 30s