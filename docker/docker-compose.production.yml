version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: aiqtoolkit
      POSTGRES_USER: ${DB_USER:-aiqtoolkit}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-aiqtoolkit}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-aiqtoolkit}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  milvus:
    image: milvusdb/milvus:latest
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    ports:
      - "19530:19530"
    volumes:
      - milvus_data:/var/lib/milvus
    depends_on:
      - etcd
      - minio

  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      ETCD_ADVERTISE_CLIENT_URLS: http://etcd:2379
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
    volumes:
      - etcd_data:/etcd

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  # Application Services
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-aiqtoolkit}:${DB_PASSWORD:-aiqtoolkit}@postgres:5432/aiqtoolkit
      - REDIS_URL=redis://redis:6379
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      - AIQ_ENV=production
    env_file:
      - ../.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ../logs:/app/logs
    command: python -m aiq.digital_human.ui.api_server_complete

  digital-human:
    build:
      context: ..
      dockerfile: docker/Dockerfile.digital_human_production
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-aiqtoolkit}:${DB_PASSWORD:-aiqtoolkit}@postgres:5432/aiqtoolkit
      - REDIS_URL=redis://redis:6379
      - API_URL=http://api:8000
      - AIQ_ENV=production
    env_file:
      - ../.env
    ports:
      - "8080:8080"
    depends_on:
      - api
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
              count: 1

  consensus:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-aiqtoolkit}:${DB_PASSWORD:-aiqtoolkit}@postgres:5432/aiqtoolkit
      - REDIS_URL=redis://redis:6379
      - AIQ_ENV=production
    env_file:
      - ../.env
    ports:
      - "8090:8090"
    depends_on:
      - api
    command: python -m aiq.neural.consensus_service

  ui:
    build:
      context: ../external/aiqtoolkit-opensource-ui
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000
      - NEXT_PUBLIC_WS_URL=ws://api:8000
    ports:
      - "3000:3000"
    depends_on:
      - api

  # Monitoring Services
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana

  # Blockchain Node (for development/testing)
  ganache:
    image: trufflesuite/ganache:latest
    ports:
      - "8545:8545"
    volumes:
      - ganache_data:/ganache_data
    command: 
      - --accounts 10
      - --host 0.0.0.0
      - --port 8545
      - --deterministic
      - --database.dbPath /ganache_data

volumes:
  postgres_data:
  redis_data:
  milvus_data:
  etcd_data:
  minio_data:
  prometheus_data:
  grafana_data:
  ganache_data:

networks:
  default:
    name: aiqtoolkit
    driver: bridge