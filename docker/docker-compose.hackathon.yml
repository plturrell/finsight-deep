version: '3.8'

services:
  # Minimal services for hackathon demo
  
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: aiqtoolkit
      POSTGRES_USER: aiqtoolkit
      POSTGRES_PASSWORD: aiqtoolkit
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aiqtoolkit"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Cache
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # API Server with GPU support
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - DATABASE_URL=postgresql://aiqtoolkit:aiqtoolkit@postgres:5432/aiqtoolkit
      - REDIS_URL=redis://redis:6379
      - AIQ_ENV=hackathon
      - ENABLE_GPU=true
      - CUDA_VISIBLE_DEVICES=0
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ../logs:/app/logs
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
              count: 1
    command: python -m aiq.digital_human.ui.api_server_complete

  # Frontend UI
  ui:
    build:
      context: ../external/aiqtoolkit-opensource-ui
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - api

  # Monitoring (optional for demo)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning

  # Local blockchain for demo
  ganache:
    image: trufflesuite/ganache:latest
    ports:
      - "8545:8545"
    command: 
      - --accounts 10
      - --host 0.0.0.0
      - --port 8545
      - --deterministic

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: aiqtoolkit-hackathon
    driver: bridge